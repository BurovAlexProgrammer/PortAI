<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>О себе</value>
  </data>
  <data name="BurovAleksey" xml:space="preserve">
    <value>Буров Алексей</value>
  </data>
  <data name="Contacts" xml:space="preserve">
    <value>Контакты</value>
  </data>
  <data name="DownloadApp" xml:space="preserve">
    <value>Скачать приложение</value>
  </data>
  <data name="GoToPage" xml:space="preserve">
    <value>Перейти на страницу</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Домой</value>
  </data>
  <data name="Mail" xml:space="preserve">
    <value>Почта</value>
  </data>
  <data name="MyBiography" xml:space="preserve">
    <value>Меня зовут Алексей. Мне нравится программировать и я постоянно развиваюсь в этом направлении. Началось мое влечение к программированию с уроков информатики в школе, затем пошел учиться в институт на факультет информатики. &lt;br/&gt;
    После окончания ВУЗа вернулся в родной город и начал искать работу. В маленьком городе сложнее найти работу, особенно программистом. Тогда я решил не тратить время и пошел работать инженером электроником (АСУ). Так как свободного времени было достаточно, я развивался в направлении геймдев. На тот момент я еще не знал о существовании мощных игровых движков, поэтому пользовался ранее мне известным Blitz3D. Это был очень полезный и интересный опыт - я хорошо разобрался в работе рендера, фреймах, писал свои физические эффекты, генераторы частиц и многое другое. &lt;br/&gt;
    Потом я узнал о существовании токого великолепного движка как Unity3D. Его возможности меня поразили, и работа на этом движке стала моей мечтой. &lt;br/&gt;
    Но в моем городе есть только одна большая организация со специальностями программиста - "Сибинтек", в ней я на данный момент и работаю. Работа интересная, сопровождаем корпоративный портал, разрабатываем кастомные формы, веб-части и дополнительный функционал, где SharePoint не справляется. Здесь я хорошо подтянул C#, ASP/WPF .Net, JS / jQuery, SQL. Полностью разработал клиент-приложение (C#, WPF, SQL), но делал это один. Мне нужен опыт рабоыт в команде!&lt;br/&gt;
    Я планирую и дальше развиваться и сейчас рассматриваю переезд в другой город, с бОльшими возможностями&lt;br/&gt;</value>
  </data>
  <data name="MyProjectBlitzDemo1" xml:space="preserve">
    <value>Неплохая заставка получилась в момент изучения движка. Захват фрейма на Blitz3d очень сильно нагружает систему, но современные ПК справляются. Мне больше всего запомнилась разработка календаря с вожможностью перелистывать месяцы.</value>
  </data>
  <data name="MyProjectBlitzDemo2" xml:space="preserve">
    <value>Лабиринты я решил разработать, когда на работе было скучно. Решил развлечь коллег, но веселее всего оказалось мне, когда я понял что для быстрого построения карт на консольной IDE - это написать свой редактор)</value>
  </data>
  <data name="MyProjectBlitzDemo3" xml:space="preserve">
    <value>Этот проект появился когда я захотел поздравить свою девушку виртуальной открыткой, меня больше впечатлила открытка, чем её). Я решил генерировать рост цветков в произвольной форме. Имитировал падение лепестков контроллером (ручной генератор частиц). Мне понравилось разрабатывать систему роста стебля и цветков по принципу наследия и изменения характеристик.</value>
  </data>
  <data name="MyProjectBlitzDemo4" xml:space="preserve">
    <value>Это последняя и самая большая моя разработка на движке Blitz3D. Здесь было придумано много интересных решений, жаль что движок устарел. В этом проекте я разработал смену дня и ночи, систему роста растений и плодородности почвы, LOD от расстояния, использование шейдеров и многое другое.</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Телефон</value>
  </data>
  <data name="Portfolio" xml:space="preserve">
    <value>Портфолио</value>
  </data>
  <data name="Repo" xml:space="preserve">
    <value>Репозиторий</value>
  </data>
  <data name="RestAPIDemo1" xml:space="preserve">
    <value>Мне стало интересно попробовать RestAPI, я выбрал тему - Поиск фильмов, потому наглядно. В этом проекте я использовал новые для меня технологий: middleware, bootstrap, локализация (отдельная благодарность разработчикам &lt;a href='https://marketplace.visualstudio.com/items?itemName=TomEnglert.ResXManager#review-details'&gt; плагина &lt;/a&gt;), многопоточная загрузка коллекции фильмов. Я использовал tmdb api, у него есть ограничение (1 запрос содержит максимум 30 фильмов), использование многопоточности значительно сократило время загрузки.</value>
  </data>
  <data name="ShowMail" xml:space="preserve">
    <value>Показать почту</value>
  </data>
  <data name="ShowPhone" xml:space="preserve">
    <value>Показать номер телефона</value>
  </data>
</root>