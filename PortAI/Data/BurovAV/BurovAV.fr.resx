<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>À propos de moi</value>
  </data>
  <data name="Contacts" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="DownloadApp" xml:space="preserve">
    <value>Télécharger l'application</value>
  </data>
  <data name="GoToPage" xml:space="preserve">
    <value>Aller à la page</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Accueil</value>
  </data>
  <data name="Mail" xml:space="preserve">
    <value>Courrier</value>
  </data>
  <data name="MyProjectBlitzDemo1" xml:space="preserve">
    <value>Un bon économiseur d&amp;#39;écran s&amp;#39;est avéré au moment d&amp;#39;étudier le moteur. La capture d&amp;#39;un cadre sur Blitz3d est très stressante pour le système, mais les PC modernes peuvent le faire. Je me souviens surtout du développement d&amp;#39;un calendrier avec la possibilité de tourner au fil des mois.!</value>
  </data>
  <data name="MyProjectBlitzDemo2" xml:space="preserve">
    <value>J&amp;#39;ai décidé de développer des labyrinthes quand c&amp;#39;était ennuyeux au travail. J&amp;#39;ai décidé de divertir mes collègues, mais cela s&amp;#39;est avéré être le plus amusant pour moi quand j&amp;#39;ai réalisé que construire rapidement des cartes sur la console IDE, écrire votre propre éditeur) C&amp;#39;était une expérience intéressante et un bon résultat.!</value>
  </data>
  <data name="MyProjectBlitzDemo3" xml:space="preserve">
    <value>Ce projet est apparu lorsque j&amp;#39;ai voulu féliciter ma petite amie pour une carte postale virtuelle. J&amp;#39;ai décidé de générer des fleurs à floraison gratuite. Simulation de la chute des pétales par le contrôleur (générateur de particules manuel). J&amp;#39;ai aimé développer un système de croissance des tiges et des fleurs basé sur le principe du patrimoine et des caractéristiques changeantes.!</value>
  </data>
  <data name="MyProjectBlitzDemo4" xml:space="preserve">
    <value>C&amp;#39;est mon dernier et plus grand développement sur le moteur Blitz3D. De nombreuses solutions intéressantes ont été inventées ici, c&amp;#39;est dommage que le moteur soit dépassé. Dans ce projet, j&amp;#39;ai développé un changement de jour et de nuit, un système de croissance des plantes et de fertilité des sols, une LOD à distance, l&amp;#39;utilisation de shaders et bien plus encore.!</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Téléphone</value>
  </data>
  <data name="Portfolio" xml:space="preserve">
    <value>Portefeuille</value>
  </data>
  <data name="RestAPIDemo1" xml:space="preserve">
    <value>Il est devenu intéressant pour moi d'essayer RestAPI, j'ai choisi le sujet - Rechercher des films. Parce que c'est clair. Dans ce projet, j'ai utilisé de nombreuses technologies nouvelles pour moi, à savoir: middleware, bootstrap, localisation (merci spécial aux développeurs de &lt;a href='https://marketplace.visualstudio.com/items?itemName=TomEnglert.ResXManager#review-details'&gt; plugin &lt;/a&gt;), téléchargement multithread d'une collection de films. J'ai utilisé l'api tmdb, il a une limitation (1 requête contient un maximum de 30 films) l'utilisation du multithreading a considérablement réduit le temps de téléchargement.</value>
  </data>
  <data name="ShowMail" xml:space="preserve">
    <value>Afficher le courrier</value>
  </data>
  <data name="ShowPhone" xml:space="preserve">
    <value>Afficher le téléphone</value>
  </data>
  <data name="MyBiography" xml:space="preserve">
    <value>Je m'appelle Aleksey. J'aime programmer et je me développe constamment dans cette direction. Mon attrait pour la programmation a commencé avec des cours d'informatique à l'école, puis je suis allé étudier à l'institut à la faculté d'informatique. &lt;br /&gt;
    Après ses études, il est retourné dans sa ville natale et a commencé à chercher du travail. Dans une petite ville, il est plus difficile de trouver un emploi, surtout en tant que programmeur. J'ai alors décidé de ne pas perdre de temps et je suis allé travailler comme ingénieur en électronique. Puisqu'il y avait assez de temps libre, j'ai évolué dans le sens de gamedev. À cette époque, je ne connaissais toujours pas l'existence de puissants moteurs de jeu, j'ai donc utilisé le célèbre Blitz3D plus tôt. Ce fut une expérience très utile et intéressante - je connaissais bien le travail de rendu, les images, l'écriture de mes effets physiques, les générateurs de particules et bien plus encore. &lt;br /&gt;
    Ensuite, j'ai découvert l'existence de ce magnifique moteur comme Unity3d. Ses capacités m'ont étonné et travailler sur ce moteur est devenu mon rêve. &lt;br /&gt;
    Mais dans ma ville, il n'y a qu'une seule grande organisation avec les spécialités d'un programmeur - Sibintek, et j'y travaille actuellement. Le travail est intéressant, nous accompagnons le portail d'entreprise, nous développons des formulaires personnalisés, des composants WebPart et des fonctionnalités supplémentaires où SharePoint ne fait pas face. Ici j'ai bien tiré C #, ASP Net, JS / jQuery, SQL. Développement complet d'une application client (C #, WPF, SQL). &lt;br /&gt;
    Je prévois de développer davantage et envisage actuellement de déménager dans une autre ville.</value>
  </data>
</root>